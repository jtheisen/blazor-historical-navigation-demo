@inject HistoricalNavigator HisNav

@{
    var hi = currentHistoryIndex;
}

<div>@previousHistoryIndex</div>

<div class="double-page @AnimationClass">
    <div class="dummy">&nbsp;</div>

    @for (var i = hi - 1; i <= hi + 1; ++i)
    {
        var offset = i - hi;

        var rd = i == hi ? HisNav.SetCurrentRouteData(RouteData) : HisNav.GetRelativeRoutData(offset);

        <div @key="@i" class="flex-1" style="--page-offset: @offset">
            @if (rd != null)
            {
                <div>@i</div>
                <RouteView RouteData="@rd" />
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public RouteData? RouteData { get; set; } = null!;

    public String AnimationClass => currentHistoryIndex < previousHistoryIndex ? "move-right" : "move-left";

    Int32 previousHistoryIndex, currentHistoryIndex;

    protected override void OnParametersSet()
    {
        var hi = HisNav.CurrentHistoryIndex;

        if (hi != currentHistoryIndex)
        {
            previousHistoryIndex = currentHistoryIndex;
            currentHistoryIndex = hi;
        }
    }
}
